{"ast":null,"code":"var _jsxFileName = \"/home/chiagger/repos/cv-project/src/components/experience.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ExperienceComp from './addComp/experienceAdd';\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  _s();\n  const [exp, setExp] = useState({\n    id: uniqid(),\n    title: \"Software Engineer\",\n    desc: \"at Google, working with React\",\n    since: \"2020\",\n    to: \"2022\",\n    where: \"London, UK\"\n  });\n  const [expArray, setExpArray] = useState([]);\n  const arrayUpdated = useRef(false);\n  useEffect(() => {\n    if (arrayUpdated.current) {\n      //to prevent useEffect from running twice\n      return;\n    }\n    const handleNewExp = e => {\n      e.preventDefault();\n      setExp({\n        id: exp.id,\n        title: 'Software Engineer',\n        desc: \"at Google, working with React\",\n        since: \"2020\",\n        to: '2022',\n        where: 'London, UK'\n      });\n      setExpArray(expArray => [...expArray, exp]);\n      arrayUpdated.current = true;\n    };\n    const newExpBtn = document.getElementById(\"addExp\");\n    newExpBtn.addEventListener(\"click\", handleNewExp);\n    return () => {\n      document.removeEventListener(\"click\", handleNewExp);\n    };\n  }, [expArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headingwrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"heading\",\n        children: \"WORK EXPERIENCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addExp\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExperienceComp, {\n      expArray: expArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Experience, \"DA8rLQrMNOnPWkCpUKTRmeMqLJI=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ExperienceComp","uniqid","Experience","exp","setExp","id","title","desc","since","to","where","expArray","setExpArray","arrayUpdated","current","handleNewExp","e","preventDefault","newExpBtn","document","getElementById","addEventListener","removeEventListener"],"sources":["/home/chiagger/repos/cv-project/src/components/experience.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ExperienceComp from './addComp/experienceAdd';\nimport uniqid from \"uniqid\";\n\n\nconst Experience = () => {\n    const [exp, setExp] = useState({\n        id: uniqid(), title: \"Software Engineer\",\n        desc: \"at Google, working with React\", since: \"2020\", to: \"2022\", where: \"London, UK\"\n    })\n    const [expArray, setExpArray] = useState([]);\n    const arrayUpdated = useRef(false);\n\n\n    useEffect(() => {\n        if (arrayUpdated.current) { //to prevent useEffect from running twice\n            return;\n        }\n\n        const handleNewExp = (e) => {\n            e.preventDefault();\n            setExp(\n                {\n                    id: exp.id,\n                    title: 'Software Engineer',\n                    desc: \"at Google, working with React\",\n                    since: \"2020\",\n                    to: '2022',\n                    where: 'London, UK'\n                },\n            );\n            setExpArray(expArray => [...expArray, exp]);\n            arrayUpdated.current = true;\n        };\n\n        const newExpBtn = document.getElementById(\"addExp\");\n        newExpBtn.addEventListener(\"click\", handleNewExp);\n\n        return () => {\n            document.removeEventListener(\"click\", handleNewExp)\n        };\n    }, [expArray])\n\n    return (\n        <div id=\"experience\" >\n            <div id=\"headingwrap\">\n                <div id=\"heading\">WORK EXPERIENCE</div>\n                <button id=\"addExp\">+</button>\n            </div>\n            <ExperienceComp expArray={expArray}></ExperienceComp>\n\n        </div >\n    )\n}\n\nexport default Experience\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAG5B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC;IAC3BQ,EAAE,EAAEJ,MAAM,EAAE;IAAEK,KAAK,EAAE,mBAAmB;IACxCC,IAAI,EAAE,+BAA+B;IAAEC,KAAK,EAAE,MAAM;IAAEC,EAAE,EAAE,MAAM;IAAEC,KAAK,EAAE;EAC7E,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,YAAY,GAAGd,MAAM,CAAC,KAAK,CAAC;EAGlCD,SAAS,CAAC,MAAM;IACZ,IAAIe,YAAY,CAACC,OAAO,EAAE;MAAE;MACxB;IACJ;IAEA,MAAMC,YAAY,GAAIC,CAAC,IAAK;MACxBA,CAAC,CAACC,cAAc,EAAE;MAClBb,MAAM,CACF;QACIC,EAAE,EAAEF,GAAG,CAACE,EAAE;QACVC,KAAK,EAAE,mBAAmB;QAC1BC,IAAI,EAAE,+BAA+B;QACrCC,KAAK,EAAE,MAAM;QACbC,EAAE,EAAE,MAAM;QACVC,KAAK,EAAE;MACX,CAAC,CACJ;MACDE,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAER,GAAG,CAAC,CAAC;MAC3CU,YAAY,CAACC,OAAO,GAAG,IAAI;IAC/B,CAAC;IAED,MAAMI,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IACnDF,SAAS,CAACG,gBAAgB,CAAC,OAAO,EAAEN,YAAY,CAAC;IAEjD,OAAO,MAAM;MACTI,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAEP,YAAY,CAAC;IACvD,CAAC;EACL,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACI;IAAK,EAAE,EAAC,YAAY;IAAA,wBAChB;MAAK,EAAE,EAAC,aAAa;MAAA,wBACjB;QAAK,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACvC;QAAQ,EAAE,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5B,eACN,QAAC,cAAc;MAAC,QAAQ,EAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAElD;AAEf,CAAC;AAAA,GAhDKT,UAAU;AAAA,KAAVA,UAAU;AAkDhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}